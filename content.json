{"meta":{"title":"Shawn Ye's Personal Blog","subtitle":null,"description":"Shawn Ye's personal blog","author":"Shawn Ye","url":"https://shawnye1994.github.io"},"pages":[{"title":"","date":"2018-09-05T13:00:52.381Z","updated":"2018-09-05T13:00:52.381Z","comments":true,"path":"about/index.html","permalink":"https://shawnye1994.github.io/about/index.html","excerpt":"","text":"Education. Huazhong University of Science and Technology Master of Science(M.S.c) in Optical Engineering &ensp;&ensp; Sept. 2016 - July. 2019School of Optical and Electronic InformationGrade:82/100My research work focuses on the Terahertz(THz) non-destructive imaging technique, an interdisciplinary realm which combines the optics and computer image processing together. The University of Poiters &amp; The University of Tours Summer School of France Excellent Program &ensp;&ensp; July. 2017Summer school program of “Multispectral imaging for societal, environmental and patrimonial issues”Got full scholarship provided by French Embassy in China.Lectures: digital image processing method for multispectral imaging analysis, common machine learning algorithms for pattern recognition and structured light 3D modeling technique for patrimonial issues. Harbin Institute of Technology Bachelor of Engineering in Electronics Science and Technology&ensp;&ensp; Sept. 2012 - July. 2016School of AstronauticsGrade:83/100 Online Course. Coursera Deep Learning Specialization (Andrew Ng) Completed the five deep learning specializations.&ensp;&ensp; Apr. 2018Sponsored by the Coursera scholarship and got the course certification. Internship. Fujitsu R&amp;D Center Co., Ltd. Research on accelerating EM simulation by Deep Learning&ensp;&ensp; Jul. 2018 - Aug. 2018Part of Fujitsu HPC(High performance computating) AI project.Adapted the super-resolution GAN on EM(Eelctromagnetism) simulation for improving the accuracy and promoting the speed.Research details refers to the Research Experience. Changchun Institue of Optics, Fine Mechanics and Physics, Chinese Academy of Science, China Optical fine mechanics fabrication&ensp;&ensp; Jul. 2015Summer internship for undergraduate student.Learning techniques about the fabracation and application of optical fine mechanics. Skills. Languages: &ensp;Madnarin(Native) &ensp; TOFEL 102 (Jan. 2018) &ensp; GRE 324 (May. 2017)Programming: &ensp;Python, Matlab, C++, Web-design(HTML+CSS+Javascript)Machine Learning Framework: &ensp;TensorflowSoftware: &ensp;Solidworks, AutoCAD, Lumerical FDTD-Solutions, Photoshop, Premiere Research Experience. Research on accelerating EM(Eelctromagnetism) simulation by Deep LearningThe finite-difference time-domain method for EM simulation requires huge computation when we hope to promote the simulation accuracy. We focused on making the deep neural network to map the coarse simulation result to fine simulation result and thus improving the accuracy of FDTD quickly. We adapted the SR-GAN architecture and chaged the original loss function for our application. Training result indicated that our neural network successfully map the coarse simulation to fine simulation for 1D FDTD, and it generalized well for simulation case which has same source type as the traning dataset. However, our neural network needed further improvment as the inference time was too long to reach the traget. I finished the research based on Tensorflow with the coorperation of my supervisor. July. 2018 - Aug. 2018 Terahertz flat-top beam generation based on 3D printed diffraction elementsWe proposed an efficient method to shape the Gaussian Terahertz beam to collimated flat-top beam by diffractive phase plates system. The phase plates were designed based on Input-Output phase retrieve algorithm and thin lens approximation theory. We manufactured the phase plates by 3D printing with high precision. The output flat-top beam RMS uniformity and energy percentage within the area of full width at half maximum were aournd 70% and 80% respectively. Besides, the comparison with a traditional aspheric lens flat-top beam shaping system indicated that we achieved a higher energy utilization. The paper is revising and will finish soon. I completed this research project independently under the supervise of my tutor. Sept. 2017 - Present Terahertz CT(Computed Tomography) control system developementThis is a software development project for scientific research. I finished the Terahertz CT(for normal Radon Transformation) control software based on Python independently. The software was able to handle the communication with multiple stepper motor and signal acquistion by multithreading. Besides, with the help of Numpy and OpenGL, the software can process and render the 3D imaging result in real time. The GUI was realized based on PyQt. Nov. 2017 - Jan. 2018 Diffractive elements for Zero-order Bessel beam generation with applications in the Terahertz imagingWe proposed a 0.3THz CT system with zero-order Bessel beam. Compared with traditional Guassian beam, the intensity profile of Bessel beam remains essentially invariant within the non-diffracting zone and thus extended the imaging depth of field. The paper has been submitted to Optics Express. I took charge of part optical experiments. Nov. 2017 - Mar. 2018 Terahertz SAR imaging system for human body security screeningWe build the Terahertz imaging system by a 35GHz Frequency-modulated continuous-wave source. The system achieved fast imaging based on an antenna array and SAR(synthetic aperture radar) algorithm. It was able to imaging in the near-field area with spatial resoulution of 3 millimiters. We finished the proof-of-concept experiment for human body screening by Terahertz SAR imaging system. I took charge of the electrical system building and test. Sept. 2016 - Sept. 2017 Study of Time-resolved imaging detection for Laser-induced damage of fused silicaThis is the reserach project of my undergraduate theis. We designed and constructed a time-resolved imaging system with nanosecond time resoluitoin which enables to probe the kinetics of laser-indeuced damage on fused silica. It’s a Pump-Probe experiment system based on the spatial optical path delay, as high ernergy pump laser beam striked the silica and probe laser beam illuminated the damage area for imaging. As the illuminating laser beam has a pulse width of 5 nanoseconds, we achieved a shutter speed of 5 nanoseconds. With the help of iXon Ultra888 EMCCD, we successfully obtained the images of whole damage process, and summarized the mechanism of fused silica’s laser-induced damage. I conducted the whole experiment independently under the supervise of my tutor. Feb. 2016 - Jun. 2016 Scholarship/Honors. Academic Scholarship of Huazhong University of Science and Technology &ensp; Sept.2017 Full scholarship of “France Excellence Program” provided by French Embassy in China &ensp; Jul.2017 The Excellent Volunteer of China ‘Internet Plus’ College Students Innovation and Entrepreneurship Competition &ensp; Nov.2016 Academic Scholarship of Huazhong University of Science and Technology &ensp; Sept.2016"},{"title":"Categories","date":"2018-09-02T11:22:24.182Z","updated":"2018-08-12T02:51:08.076Z","comments":true,"path":"categories/index.html","permalink":"https://shawnye1994.github.io/categories/index.html","excerpt":"","text":""},{"title":"","date":"2018-09-05T11:28:45.147Z","updated":"2018-09-05T11:28:45.147Z","comments":true,"path":"scripts/mnist.js","permalink":"https://shawnye1994.github.io/scripts/mnist.js","excerpt":"","text":"const model = tf.sequential(); model.add(tf.layers.conv2d({ inputShape: [28, 28, 1], kernelSize: 5, filters: 8, strides: 1, activation: 'relu', kernelInitializer: 'varianceScaling' })); model.add(tf.layers.maxPooling2d({poolSize: [2,2], strides: [2,2]})); model.add(tf.layers.conv2d({ inputShape: [28, 28, 1], kernelSize: 5, filters: 16, strides: 1, activation: 'relu', kernelInitializer: 'varianceScaling' })); model.add(tf.layers.maxPooling2d({poolSize: [2,2], strides: [2,2]})); model.add(tf.layers.flatten()); model.add(tf.layers.dense({units: 10, kernelInitializer: 'varianceScaling', activation: 'softmax'})); const lr = 0.5; const optimizer = tf.train.sgd(lr); model.compile({ optimizer: optimizer, loss: 'categoricalCrossentropy', metrics: ['accuracy'] }) const Bath_size = 64; const Train_batches = 150; const test_batch_size = 1000; const test_iteration_frequency = 5; async function train() { const lossValues = []; const accuracyValues = []; for (let i = 0; i < Train_batches; i++) { } }"},{"title":"","date":"2018-09-04T11:26:03.134Z","updated":"2018-09-04T11:26:03.134Z","comments":true,"path":"scripts/test_function.js","permalink":"https://shawnye1994.github.io/scripts/test_function.js","excerpt":"","text":"function add_two_num(a, b) { return a+b; }"},{"title":"Tags","date":"2018-09-02T11:22:30.652Z","updated":"2018-08-12T02:51:34.373Z","comments":true,"path":"tags/index.html","permalink":"https://shawnye1994.github.io/tags/index.html","excerpt":"","text":""}],"posts":[{"title":"Basic Git using for beginners","slug":"basic-git-using-for-beginners","date":"2018-07-05T22:40:12.000Z","updated":"2018-09-04T09:18:23.884Z","comments":true,"path":"2018/07/06/basic-git-using-for-beginners/","link":"","permalink":"https://shawnye1994.github.io/2018/07/06/basic-git-using-for-beginners/","excerpt":"You may have heard Github, so what’s the difference between Git and Github?Git is a version control system invented by Linus Torvalds, the father of Linux.GitHub is a hosting serveice for Git repositories. Git is a tool while GitHub is the service for projects that uses Git. So, what the hell is Git, what does Version Control means?Imaging that a group of people are working for a big project, each one is assigned with a specific job. Then we will meet problems: if we update our project to a new version, however, there is a bug, and how could we roll back to the previous version? Or, as many people work together, maybe they come from countries over the world, how to merge their contributions? How to make each one work independently without affecting others? Briefly speaking, the Git tracks the change of file that makes it easily to roll back at any time and Git coordinates work between multiple developers. Git is a great tool can be used not only for the coders, but also other people. Such as a writer who always need to revise his or her work.","text":"You may have heard Github, so what’s the difference between Git and Github?Git is a version control system invented by Linus Torvalds, the father of Linux.GitHub is a hosting serveice for Git repositories. Git is a tool while GitHub is the service for projects that uses Git. So, what the hell is Git, what does Version Control means?Imaging that a group of people are working for a big project, each one is assigned with a specific job. Then we will meet problems: if we update our project to a new version, however, there is a bug, and how could we roll back to the previous version? Or, as many people work together, maybe they come from countries over the world, how to merge their contributions? How to make each one work independently without affecting others? Briefly speaking, the Git tracks the change of file that makes it easily to roll back at any time and Git coordinates work between multiple developers. Git is a great tool can be used not only for the coders, but also other people. Such as a writer who always need to revise his or her work. Now, let’s start our tutorial for the basic using of Git.There are some GUI applications for Git, however, if we want to know what does Git exactly do, we’d better to realize all the things by commands manually. All the commands we will covere today are listed below:1234567$ git init$ git add$ git status$ git checkout$ git commit$ git branch$ git checkout Git installation and initializationBefore started, we need to install Git software. You can download the Git from https://git-scm.com/ for your own operating system. After finishing the installation, we will launch the Git bash to finish all our jobs. For windows system, I recommend using Git bash since it enables us using much unix commands. We can check the git version by1$ git --version Create an project folder at any place of your computer, then opend the Git bash here or cd into the foler in Git bash. Here, I create the “Git Tutorial” folder in the desktop of my windows laptop. As it’s empty, we can create some files. Assuming we are creating an web application. So, firstly we create an empty html file: index.html and app.js file by:12$ touch index.html$ touch app.js Now, we can init the Git for our project by1$ git init It will initialize the Git repository, and you can find it created an .git folder in our project folder (It’s an hidden folder and Your windows may make it invisible) Before editing our files, we can set some configuration for Git:12$ git config --global user.name 'your_name'$ git config --global user.email 'your_eamil@gmail.com' git add and git statusFirst, let’s add the index.html for git to track it’s change:1$ git add index.html Then, we can check our current status by:1$ git status It tells us that ‘index.html’ is tracked, and app.js is untracked, so we can also add the ‘app.js’.We can use “git add .” to add all the files in our projects conveniently. The added file are put on the stage, we can remove it from stage by “git rm –cached index.html” and the Git will stop tracking this html file.1$ git rm --cached index.html Now, open the index.html with your favorite editor, add some code to the html file and save the file. Then, once again, let’s check the git status: The Git is tracking our change. It tells us the index.html file is modified. So, we execute “git add .” and check status by “git status”:The status is changed, both two files are staged. git commitThe next step is committing our changes by:1$ git commit -m 'The first commit' Where “The first commit” is the commit message, and you can type any message about this commit.After committing, we check the status again, it says that the working tree is clean: So, we have mastered the most basic operation for Git. We will cover one another tips. Some time, however, we don’t want to track some file, such as log file. Let’s create a log.txt file by “touch log.txt’. Besides, we need another special file called ‘.gitignore’. We can create it by “touch .gitignore”. Then we need to add the filename of the file we want to omit in the .gitignore file and save the .gitignore. Let’s add and check the status:Git omits the log.txt file. We can also ignore whole file folder if we want. Assuming there is a foler called ‘ignore_dir’ in our project folder. We also add the name of the folder into the .gitignore file—start a new line, except that we need an ‘/‘ before the folder name. Our .gitignore file looks like this: git branchNow, we’ll change to another really important concept “Branch”. You may noticed that there is a ‘(master)’ in our command line, it means that we are in the master branch now. It’s designed to solve the problem we proposed at the beginning: how to coordinate multi workers? Imaging you are asked to add a new log file to the current project independently, others are working on some other jobs. How to add your log file while not affect others who are working at same time? Copy the current project for yourself — make a branch for yourself. We’ll do it by ‘git branch mybranch’. After creating the branch, we need to swith to the mybranch: “git checkout mybranch”12$ git branch mybranch$ git checkout mybranch Let create a new_log.txt by “touch new_log.txt” and edit it as you want. Then you add and commit the change in mybranch. If you check the project folder, of course you can find there is a file called new_log.txt: The magic thing is that if we switch back to master branch now, the new_log.txt disappears. All the changes you made in mybranch will disappear, it won’t affect the master branch. Now, you have finished your work, you need to merge your branch to the master branch:1$ git merge mybranch -m 'merge my branch' Done, all your changes made in mybranch are updated to the master branch. So, we need to confirm all the jobs in mybranch have no mistakes before merging. This tutorial is based on the great youtube video by Traversy Media. I wrote this for people who would like to read. Thanks to Traversy Media. This video also covers how to clone from Github(Remote repository) and how to push the local repository to Github.","categories":[],"tags":[{"name":"Code tips","slug":"Code-tips","permalink":"https://shawnye1994.github.io/tags/Code-tips/"}]}]}